% make plots for time series

function do_timeseries_plots(combinedMatFile, ...
                             siteLabel, ...
                             endDate, ...
                             imageDir)

  % load mat file
  
  load(combinedMatFile);

  if (length(fileDates) < 2) 
    fprintf('Warning - do_timeseries_plots\n');
    fprintf('  Only 1 time - too few for plotting\n');
    fprintf('  Site: %s\n', siteLabel);
    quit(0);
  end

  % load up fields for plotting, adding in missing data
  % where any time gaps exceed 7 hours

  % look through data times for gaps larger than 6 hours
  % create array of times with extra filled in
  % and a copy flag which indicates whether a column is
  % to be filled with real data or NaN data

  maxGapDays = 7.0 / 24.0;
  plotDates = [];
  copyPos = [];

  for (ii = 1:length(fileDates))

    thisDate = fileDates(ii);

    if (ii > 1)

      gapDays = thisDate - prevDate;
      if (gapDays > maxGapDays)
        % fill in gap with Nan data
        fillInterval = 3.0 / 24.0;
        fillDate = prevDate;
        while (fillDate < thisDate)
          fillDate = fillDate + fillInterval;
          plotDates = [ plotDates, fillDate ];
          copyPos = [ copyPos, -1 ];
        end
        
      end

    end % if (ii > 1)

    plotDates = [ plotDates, thisDate ];
    copyPos = [ copyPos, ii ];
    prevDate = thisDate;

  end % ii

  % create plotting arrays, using the original data,
  % plus fill in missing times with Nans

  nTimes = length(plotDates);

  plotAhum = nan(nLevels, nTimes);
  plotArh = nan(nLevels, nTimes);
  plotFrdiff = nan(nLevels, nTimes);
  plotAmwind = nan(nLevels, nTimes);
  plotAmresid = nan(nLevels, nTimes);
  plotAzwind = nan(nLevels, nTimes);
  plotAzresid = nan(nLevels, nTimes);
  plotTresid = nan(nLevels, nTimes);
    
  for ii = 1:nLevels
    for jj = 1:nTimes
      if (copyPos(jj) >= 0)
        plotAhum(ii, jj) = ahum(ii, copyPos(jj));
        plotArh(ii, jj) = arh(ii, copyPos(jj));
        plotFrdiff(ii, jj) = frdiff(ii, copyPos(jj));
        plotAmwind(ii, jj) = amwind(ii, copyPos(jj));
        plotAmresid(ii, jj) = amresid(ii, copyPos(jj));
        plotAzwind(ii, jj) = azwind(ii, copyPos(jj));
        plotAzresid(ii, jj) = azresid(ii, copyPos(jj));
        plotTresid(ii, jj) = tresid(ii, copyPos(jj));
     end
    end
  end


  % plots by field

  titleText = strcat([siteLabel, ': Vapor Density']);
  do_timeseries_plot(plotDates, ...
                     plotAhum, ...
                     'ahum', ...
                     'Vapor Density (g m^{-3})', ...
                     titleText, ...
                     endDate, ...
                     maxHeight, ...
                     'default', ...
                     0, 25, ...
                     imageDir);

  titleText = strcat([siteLabel, ': Relative Humidity']);
  do_timeseries_plot(plotDates, ...
                     plotArh, ...
                     'rh', ...
                     'Relative Humidity (%)', ...
                     titleText, ...
                     endDate, ...
                     maxHeight, ...
                     'default', ...
                     0, 100, ...
                     imageDir);

  titleText = strcat([siteLabel, ': Vapor Density deviation']);
  do_timeseries_plot(plotDates, ...
                     plotFrdiff, ...
                     'timemean_humidity', ...
                     'Percentage of time-mean vapor density (g m^{-3})', ...
                     titleText, ...
                     endDate, ...
                     maxHeight, ...
                     flipud(baroclinic), ...
                     -200, 200, ...
                     imageDir);

  titleText = strcat([siteLabel, ': Meridional wind']);
  do_timeseries_plot(plotDates, ...
                     plotAmwind, ...
                     'vwind', ...
                     'Meridional wind (m s^{-1})', ...
                     titleText, ...
                     endDate, ...
                     maxHeight, ...
                     flipud(baroclinic), ...
                     -20, 20, ...
                     imageDir);

  titleText = strcat([siteLabel, ': Meridional wind anomalies']);
  do_timeseries_plot(plotDates, ...
                     plotAmresid, ...
                     'vwindanom', ...
                     'Meridional wind anomaly (m s^{-1})', ...
                     titleText, ...
                     endDate, ...
                     maxHeight, ...
                     flipud(baroclinic), ...
                     -10, 10, ...
                     imageDir);

  titleText = strcat([siteLabel, ':  Zonal wind']);
  do_timeseries_plot(plotDates, ...
                     plotAzwind, ...
                     'uwind', ...
                     'Zonal (m s^{-1})', ...
                     titleText, ...
                     endDate, ...
                     maxHeight, ...
                     flipud(baroclinic), ...
                     -20, 20, ...
                     imageDir);

  titleText = strcat([siteLabel, ': Zonal wind anomalies']);
  do_timeseries_plot(plotDates, ...
                     plotAzresid, ...
                     'uwindanom', ...
                     'Zonal wind anomaly (m s^{-1})', ...
                     titleText, ...
                     endDate, ...
                     maxHeight, ...
                     flipud(baroclinic), ...
                     -10, 10, ...
                     imageDir);

  titleText = strcat([siteLabel, ': Temperature anomalies']);
  do_timeseries_plot(plotDates, ...
                     plotTresid, ...
                     'Tanom', ...
                     'Temperature anomaly (K)', ...
                     titleText, ...
                     endDate, ...
                     maxHeight, ...
                     baroclinic, ...
                     -5, 5, ...
                     imageDir);

 quit(0);

