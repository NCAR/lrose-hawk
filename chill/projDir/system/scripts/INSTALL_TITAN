#! /bin/bash

#--------------------------------------------------------------------
#
# script to install TITAN dpol system
#
# Mike Dixon, RAP, NCAR, Boulder, CO, USA
# April 2009
#
#--------------------------------------------------------------------

# set the path

export PATH=.:/bin:/usr/bin:/sbin:/usr/sbin:/usr/bin/X11:/usr/local/bin:/usr/local/sbin

#######################################################
# get run time

year=`date +'%Y'`
month=`date +'%m'`
day=`date +'%d'`
hour=`date +'%H'`
min=`date +'%M'`
sec=`date +'%S'`
datestr=${year}${month}${day}.${hour}${min}${sec}

#--------------------------------------------------------------------

echo
echo "*********************************************************************"
echo
echo "  TITAN INSTALLATION"
echo
echo "  NCAR, Boulder, CO, USA"
echo
echo "  Runtime: $year/$month/$day $hour:$min:$sec"
echo
echo "*********************************************************************"
echo
echo "  NOTES:"
echo
echo "    TITAN distribution must reside in $HOME/rap"
echo "    TITAN will be installed in project directory $HOME/projDir"
echo
echo "*********************************************************************"
echo

#--------------------------------------------------------------------
# check args
#

if [ $# != 0 -a $# != 1 ]
then
    echo
    echo "ERROR - bad command line"
    echo
    echo "Usage: $0 [-debug | -h]"
    echo
    exit -1
fi

if [ $# == 1 -a "$1" == -h ]
then
    echo
    echo "Usage: $0 [-debug | -h]"
    echo
    exit 0
fi

debug=false
debug_str=""
if [ $# == 1 -a "$1" == -debug ]
then
    debug=true
    debug_str="-debug"
fi

echo "  User input is requested as follows:"
echo ""
echo "    [option1 / option2 / option3] (default)?"
echo ""
echo "  Enter the option you want, or hit ENTER for the default"
echo ""
echo "*********************************************************************"
echo ""

probable_host_type=display
echo $HOST | grep mgen
if [ $? == 0 ]
then
  probable_host_type=mgen
fi

echo $HOST | grep pgen
if [ $? == 0 ]
then
  probable_host_type=pgen
fi

#-- get host type ---------------------------------------------------

echo "Choose host type from the following list:"
echo
echo "    mgen (moments generator)"
echo "    pgen (products generator)"
echo "    display"
read -ep "    ......($probable_host_type)? " host_type
test "$host_type" || host_type=$probable_host_type
echo

if [ "$host_type" != mgen -a \
     "$host_type" != pgen -a \
     "$host_type" != display ]
    then
    echo -n X | tr X '\07'	# Beep.
    echo
    echo "  ERROR - invalid host type: $host_type"
    echo "          aborting ......."
    echo
    exit -1
fi

echo "  Host type chosen: $host_type"
echo

# set source directory paths

cd $HOME

default_source_dir=$HOME/rap
if [ -d $default_source_dir ]
    then
    source_dir=$default_source_dir
    else
    echo "Set the source directory you want to use"
    echo "  This is where the libs, apps, distrib directories are"
    echo "  The default location is $HOME/rap"
    read -ep "    source_dir? " source_dir
    test "$source_dir" || source_dir=$default_source_dir
    echo
fi

echo "  Using source dir: $source_dir"
echo

source_proj_dir=$source_dir/projects/hawk/chill/projDir
source_data_dir=$source_dir/projects/hawk/chill/data
system_dir=$source_proj_dir/system

########################
# copy in dotfiles

cd $HOME

/bin/mv .cshrc .cshrc.$datestr
/bin/cp $system_dir/dotfiles/cshrc .cshrc

/bin/mv .emacs .emacs.$datestr
/bin/cp $system_dir/dotfiles/emacs .emacs

/bin/rm -f .cvsignore
/bin/cp $system_dir/dotfiles/cvsignore .cvsignore

/bin/rm -f .Xdefaults
/bin/cp $system_dir/dotfiles/Xdefaults .Xdefaults

######################
# make link to projDir

cd $HOME
/bin/rm -f projDir
ln -s $source_proj_dir
cd projDir
mkdir bin32
mkdir bin64
ln -s bin64 bin

###########################################
# set data dir
# copy data dir into /data/titan5, which must be writable by titan5
# or set data dir to other location
# make link to data dir

data_dir=/export/data/titan5
if [ ! -d $data_dir ]
    then

    echo "Set the main data directory you want to use"
    echo "  The default location is /export//data/titan5"
    read -ep "    data_dir? " data_dir
    test "$host_type" || data_dir=$/export/data/titan5
    echo
fi

echo "  Using data_dir: $data_dir"
echo

if [ ! -d $data_dir ]
    then
    echo "ERROR - no $data_dir directory"
    echo "  You must create /data/titan5, owned by this account"
    exit 1
fi

cd $HOME/projDir
/bin/cp -r $source_data_dir $data_dir
/bin/rm -f data
ln -s $data_dir/data

#######################
# make link to log dir

/bin/rm -f logs
ln -s data/logs

########################
# distribution host list

cd $HOME/projDir/data
if [ ! -f _distHostList ]
    then
    cp _distHostList.template _distHostList
fi

#############################################
# link _Janitor files according to host type

cd $HOME/projDir/data
/bin/rm -f _Janitor
ln -s _Janitor.$host_type _Janitor

cd $HOME/projDir/data/mdv
/bin/rm -f _Janitor
ln -s _Janitor.$host_type _Janitor

cd $HOME/projDir/data/spdb
/bin/rm -f _Janitor
ln -s _Janitor.$host_type _Janitor

cd $HOME/projDir/data/titan
/bin/rm -f _Janitor
ln -s _Janitor.$host_type _Janitor

##########################
# display config directory

cd $HOME
/bin/rm -f .display
ln -s projDir/gtkdisplay/params .display

##############################
# set up links in control dir

cd $HOME/projDir/control
/bin/rm -f crontab proc_list
ln -s proc_list.$host_type proc_list
ln -s crontab.$host_type crontab

#--------------------------------------------------------------------
# done

echo
echo "  ************"
echo "  *** Done ***"
echo "  ************"
echo

exit 0

